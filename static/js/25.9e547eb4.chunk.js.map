{"version":3,"file":"static/js/25.9e547eb4.chunk.js","mappings":"wOA0EA,UAjEA,SAAcA,GACZ,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,GAAnC,eAAOG,EAAP,KACA,GADA,MACwBH,EAAAA,EAAAA,UAAS,IAAjC,eAAOI,EAAP,KAAaC,EAAb,KACMC,GAAUF,EAAO,GAAKD,EAG5B,IAFiBI,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACOR,EAAAA,EAAAA,WAAS,IAAjC,eACA,GADA,WACwBA,EAAAA,EAAAA,WAAS,IAAjC,eAYA,OAZA,WAEAS,EAAAA,EAAAA,YAAU,WACRC,IAAAA,IAEI,uEAEDC,MAAK,SAACC,GACLV,EAASU,EAAOC,WAEnB,KAGD,kBAAMC,UAAWC,EAAAA,EAAAA,UAAjB,WACE,iBAAMD,UAAWC,EAAAA,EAAAA,KAAjB,SACGd,EACEe,MAAMV,EAAQA,EAASH,GACvBc,KAAI,YAAoC,EAAjCC,MAAkC,IAAD,MAA1BC,EAA0B,EAA1BA,EAAGC,EAAuB,EAAvBA,GAAuB,EAAnBC,MAAmB,EAAZC,MAC3B,OACE,qBAASR,UAAWC,EAAAA,EAAAA,QAApB,WACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaH,GAArB,UACE,SAAC,IAAD,CACEI,IAAG,UAAEvB,EAAMmB,UAAR,aAAE,EAAWI,IAChBH,MAAK,UAAEpB,EAAMmB,UAAR,aAAE,EAAWC,MAClBC,MAAK,UAAErB,EAAMmB,UAAR,aAAE,EAAWE,WAGtB,kBAAO,MARgCH,QANnD,KA6BE,0BACE,SAAC,IAAD,CACEM,MAAOxB,EAAMyB,OACbvB,MAAOA,EACPC,KAAMA,EACNC,QAASA,OAGb,mBAAQS,UAAWC,EAAAA,EAAAA,OAAnB,UACE,SAAC,IAAD","sources":["route/Tech.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Pagination from \"../Pagination\";\nimport styles from \"../css/List.module.css\";\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Category from \"../component/Category\";\nimport axios from \"axios\";\nimport Footer from \"../component/Footer\";\n\nfunction Tech(props) {\n  const [posts, setPosts] = useState([]);\n  const [limit, setLimit] = useState(4);\n  const [page, setPage] = useState(1);\n  const offset = (page - 1) * limit;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [hart, setHart] = useState(true);\n  const [wish, setWish] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://raw.githubusercontent.com/mdab4793/shop/main/Tech/Tech.json\"\n      )\n      .then((result) => {\n        setPosts(result.data);\n      });\n  }, []);\n\n  return (\n    <body className={styles.container}>\n      <main className={styles.main}>\n        {posts\n          .slice(offset, offset + limit)\n          .map(({ index, i, id, title, price }) => {\n            return (\n              <section className={styles.section} key={i}>\n                <Link to={`/detail/${id}`}>\n                  <Category\n                    url={posts[id]?.url}\n                    title={posts[id]?.title}\n                    price={posts[id]?.price}\n                  />\n                </Link>\n                <br />{\" \"}\n                {/* <button\n                  onClick={() => {\n                    setHart(!hart);\n                    setWish(!wish);\n                  }}\n                >\n                  {hart === true ? <>찜하기💙</> : null}\n                  {wish === true ? <>찜완료❤️ </> : null}\n                </button> */}\n              </section>\n            );\n          })}\n      </main>\n      )\n      <div>\n        <Pagination\n          total={posts.length}\n          limit={limit}\n          page={page}\n          setPage={setPage}\n        />\n      </div>\n      <footer className={styles.footer}>\n        <Footer />\n      </footer>\n    </body>\n  );\n}\n\nexport default Tech;\n"],"names":["props","useState","posts","setPosts","limit","page","setPage","offset","useDispatch","useNavigate","useEffect","axios","then","result","data","className","styles","slice","map","index","i","id","title","price","to","url","total","length"],"sourceRoot":""}