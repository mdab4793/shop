{"version":3,"file":"static/js/115.bda1e3f0.chunk.js","mappings":"mMA0GA,UAlGA,SAAcA,GAEZ,IAAMC,GAAQC,EAAAA,EAAAA,KAAY,SAACD,GAAD,OAAWA,KAE/BE,GAAWC,EAAAA,EAAAA,MAGbC,IAFWC,EAAAA,EAAAA,MAAPC,GAEIN,EAAMO,KAAKC,QAAO,SAC5BC,EACAC,EACAC,EACAC,GAEA,OACEH,EACAT,EAAMO,KAAKI,GAAcE,MAAQb,EAAMO,KAAKI,GAAcG,QAG9D,IAEA,OACE,kBAAMC,UAAWC,EAAAA,EAAAA,GAAjB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,UAAhB,WACE,mBAAOD,UAAWC,EAAAA,EAAAA,KAAlB,WACE,kBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,UACE,2BACE,mBACA,kCACA,mCACA,mCACA,sCACA,mCACA,yCAGJ,kBAAOD,UAAWC,EAAAA,EAAAA,MAAlB,SACGhB,EAAMO,KAAKU,KAAI,SAACC,EAAGC,GAElB,OACE,2BACE,yBACE,gBAAKC,IAAKpB,EAAMO,KAAKY,GAAGE,IAAKC,IAAI,QAEnC,wBAAKtB,EAAMO,KAAKY,GAAGI,QACnB,8BAAMvB,EAAMO,KAAKY,GAAGN,MAAQb,EAAMO,KAAKY,GAAGL,UAC1C,wBAAKd,EAAMO,KAAKY,GAAGK,SACnB,wBAAKxB,EAAMO,KAAKY,GAAGL,SACnB,gBAAIC,UAAWC,EAAAA,EAAAA,MAAf,WACE,mBACES,QAAS,WACPvB,GAASwB,EAAAA,EAAAA,IAAS1B,EAAMO,KAAKY,GAAGb,MAFpC,gBAQA,mBACEmB,QAAS,WACPvB,GAASyB,EAAAA,EAAAA,IAAO3B,EAAMO,KAAKY,GAAGb,KAC1BN,EAAMO,KAAKY,GAAGL,OAHtB,mBAUF,2BACE,mBACEC,UAAWC,EAAAA,EAAAA,OACXS,QAAS,WACPvB,GAAS0B,EAAAA,EAAAA,IAAW5B,EAAMO,KAAKY,GAAGb,MAHtC,UAME,SAAC,IAAD,CAAiBuB,KAAMC,EAAAA,QACf,OACN,MApCCX,QAwCN,OACF,QAEX,iBAAKJ,UAAWC,EAAAA,EAAAA,aAAhB,WACE,iBAAKD,UAAWC,EAAAA,EAAAA,MAAhB,oBAEE,kBAFF,IAEUZ,MAEV,mBAAQW,UAAWC,EAAAA,EAAAA,IAAYS,QAAS,aAAxC,UACE,SAAC,IAAD,CAAiBI,KAAME,EAAAA,IAAcC,KAAK,aAG9C,mBAAQjB,UAAWC,EAAAA,EAAAA,OAAnB,UACE,SAAC,IAAD","sources":["route/Cart.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"../css/Cart.module.css\";\nimport { addCount, addMin, removeItem } from \"../store\";\nimport Footer from \"../component/Footer\";\nimport { faCreditCard, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link, useParams } from \"react-router-dom\";\n\nfunction Cart(props) {\n  //store 의 state갖다쓸때\n  const state = useSelector((state) => state);\n  //store.js에서 요청을 보내주는함수\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  //총 장바구니 합계\n  let total = state.cart.reduce(function (\n    accumulator,\n    currentValue,\n    currentIndex,\n    array\n  ) {\n    return (\n      accumulator +\n      state.cart[currentIndex].price * state.cart[currentIndex].count\n    );\n  },\n  0);\n\n  return (\n    <body className={styles.bg}>\n      <div className={styles.container}>\n        <table className={styles.main}>\n          <thead className={styles.thead}>\n            <tr>\n              <th></th>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Color</th>\n              <th>Quantity</th>\n              <th>Count</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody className={styles.tbody}>\n            {state.cart.map((a, i) => {\n              //store.js에서의 cart\n              return (\n                <tr key={i}>\n                  <th>\n                    <img src={state.cart[i].img} alt=\"\" />\n                  </th>\n                  <th>{state.cart[i].name}</th>\n                  <th>${state.cart[i].price * state.cart[i].count}</th>\n                  <th>{state.cart[i].color}</th>\n                  <th>{state.cart[i].count}</th>\n                  <th className={styles.count}>\n                    <button\n                      onClick={() => {\n                        dispatch(addCount(state.cart[i].id));\n                      }}\n                    >\n                      +\n                    </button>\n\n                    <button\n                      onClick={() => {\n                        dispatch(addMin(state.cart[i].id));\n                        if (state.cart[i].count === 1) {\n                        }\n                      }}\n                    >\n                      -\n                    </button>\n                  </th>\n                  <th>\n                    <button\n                      className={styles.delete}\n                      onClick={() => {\n                        dispatch(removeItem(state.cart[i].id));\n                      }}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </button>{\" \"}\n                  </th>{\" \"}\n                </tr>\n              );\n            })}\n          </tbody>{\" \"}\n        </table>{\" \"}\n      </div>\n      <div className={styles.totalWrapper}>\n        <div className={styles.total}>\n          Total:\n          <br />${total}\n        </div>\n        <button className={styles.btn} onClick={() => {}}>\n          <FontAwesomeIcon icon={faCreditCard} size=\"2x\" />\n        </button>\n      </div>\n      <footer className={styles.footer}>\n        <Footer />\n      </footer>\n    </body>\n  );\n}\n\nexport default Cart;\n"],"names":["props","state","useSelector","dispatch","useDispatch","total","useParams","id","cart","reduce","accumulator","currentValue","currentIndex","array","price","count","className","styles","map","a","i","src","img","alt","name","color","onClick","addCount","addMin","removeItem","icon","faTrash","faCreditCard","size"],"sourceRoot":""}