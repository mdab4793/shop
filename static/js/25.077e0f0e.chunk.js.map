{"version":3,"file":"static/js/25.077e0f0e.chunk.js","mappings":"wOA0IA,UAhIA,SAAcA,IACGC,EAAAA,EAAAA,MAAPC,GAAR,IAEA,GAA0BC,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KACA,GADA,MACwBD,EAAAA,EAAAA,UAAS,IAAjC,eAAOE,EAAP,KAAaC,EAAb,KACMC,GAAUF,EAAO,GAAKD,EAI5B,IAHiBI,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OAEKN,EAAAA,EAAAA,UAAS,KAA/B,eACA,GADA,WACsBA,EAAAA,EAAAA,UAAS,KAA/B,eA+CA,OA/CA,WAgDE,kBAAMO,UAAWC,EAAAA,EAAAA,UAAjB,WAeE,iBAAMD,UAAWC,EAAAA,EAAAA,KAAjB,SACGX,EAAMY,MAAMC,MAAMN,EAAQA,EAASH,GAAOU,KAAI,YAAa,IAAD,QAATZ,EAAS,EAATA,GAChD,OACE,oBAASQ,UAAWC,EAAAA,EAAAA,QAApB,UAWE,SAAC,IAAD,CACET,GAAIA,EACJa,OAAM,UAAEf,EAAMY,MAAMV,UAAd,aAAE,EAAiBa,OACzBC,KAAI,UAAEhB,EAAMY,MAAMV,UAAd,aAAE,EAAiBc,KACvBC,MAAK,UAAEjB,EAAMY,MAAMV,UAAd,aAAE,EAAiBe,MACxBC,MAAK,UAAElB,EAAMY,MAAMV,UAAd,aAAE,EAAiBgB,SAhBahB,QAmCvC,KACR,SAAC,IAAD,KACA,0BACE,SAAC,IAAD,CACEiB,MAAOnB,EAAMY,MAAMQ,OACnBhB,MAAOA,EACPC,KAAMA,EACNC,QAASA,MAEN,KACP,mBAAQI,UAAWC,EAAAA,EAAAA,OAAnB,UACE,SAAC,IAAD","sources":["route/Tech.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Pagination from \"../Pagination\";\nimport styles from \"../css/List.module.css\";\nimport { Link, Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Category from \"../component/Category\";\nimport axios from \"axios\";\nimport Footer from \"../component/Footer\";\nimport ScrollTop from \"../component/ScrollTop\";\nimport TechDetail from \"../route/TechDetail\";\nfunction Tech(props) {\n  const { id } = useParams();\n  // const [props.posts, setprops.posts] = useState([]); //데이터 받아오는 함수\n  const [limit, setLimit] = useState(4);\n  const [page, setPage] = useState(1);\n  const offset = (page - 1) * limit;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  let [hart, setHart] = useState([]);\n  let [wish, setWish] = useState([]);\n\n  // let LowPrice = () => {\n  //   let low = props.posts.sort((a, b) => a.price - b.price);\n  //   setprops.posts([...low]);\n  //   console.log(props.posts.sort());\n  // };\n  // let HighPrice = () => {\n  //   let high = props.posts.sort((a, b) => b.price - a.price);\n  //   setprops.posts([...high]);\n  //   console.log(props.posts.sort());\n  // };\n\n  // hart.push(\"💙\");\n  // wish.push(\"❤️\");\n  // console.log(hart);\n\n  // function LowPrice() {\n  //   let low = [...props.posts];\n  //   low = low.sort((a, b) => a.price - b.price);\n  //   setprops.posts(low);\n  // }\n  // useEffect(() => {\n  //   axios\n  //     .get(\n  //       \"https://raw.githubusercontent.com/mdab4793/shop/main/Tech/Tech.json\"\n  //     )\n  //     .then((result) => {\n  //       setprops.posts(result.data);\n  //     });\n  // }, []);\n  // function LowPrice() {\n  //   //가격낮은순 함수\n  //   let low = [...props.posts];\n  //   low = low.sort((a, b) => a.price - b.price);\n  //   setPosts(low);\n  //   console.log(props.posts.sort());\n  // }\n\n  // function HighPrice() {\n  //   //가격높은순 함수\n  //   let high = [...props.posts];\n  //   high = high.sort((a, b) => b.price - a.price);\n  //   setPosts(high);\n  //   console.log(props.posts.sort());\n  // }\n\n  return (\n    <body className={styles.container}>\n      {/* <button //가격낮은순으로 정렬\n        onClick={() => {\n          LowPrice();\n        }}\n      >\n        LowPrice\n      </button>{\" \"}\n      <button //가격높은순으로 정렬\n        onClick={() => {\n          HighPrice();\n        }}\n      >\n        HighPrice\n      </button> */}\n      <main className={styles.main}>\n        {props.posts.slice(offset, offset + limit).map(({ id }) => {\n          return (\n            <section className={styles.section} key={id}>\n              {/* <div className={styles.wrapper}>\n                <Link to={`/techdetail/${id}`}>\n                  <img src={props.posts[id]?.url} alt=\"\" />\n                </Link>\n                <h3>{props.posts[id]?.title}</h3>\n                <div>\n                  <p>${props.posts[id]?.price}</p>\n                </div>\n              </div> */}\n\n              <Category\n                id={id}\n                filter={props.posts[id]?.filter}\n                url1={props.posts[id]?.url1}\n                title={props.posts[id]?.title}\n                price={props.posts[id]?.price}\n              />\n\n              {/* <button\n                찜하기\n                onClick={() => {\n                  let copy = [...hart];\n                  copy[id] = wish[id];\n                  setHart(copy);\n                  let copy1 = [...wish];\n                  copy1[id] = hart[id];\n                  setWish(copy1);\n                }}\n              >\n                {hart[id]}\n              </button> */}\n            </section>\n          );\n        })}\n      </main>{\" \"}\n      <ScrollTop />\n      <div>\n        <Pagination\n          total={props.posts.length}\n          limit={limit}\n          page={page}\n          setPage={setPage}\n        />\n      </div>{\" \"}\n      <footer className={styles.footer}>\n        <Footer />\n      </footer>\n    </body>\n  );\n}\n\nexport default Tech;\n"],"names":["props","useParams","id","useState","limit","page","setPage","offset","useDispatch","useNavigate","className","styles","posts","slice","map","filter","url1","title","price","total","length"],"sourceRoot":""}